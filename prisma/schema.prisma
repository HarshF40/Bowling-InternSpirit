generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  CUSTOMER
  MANAGER
}

enum ReservationStatus {
  PENDING
  APPROVED
  REJECTED
}

enum TimeSlotStatus{
  AVAILABLE
  UNAVAILABLE
}

model Account {
  id           String   @id @default(uuid())
  email        String   @unique
  phone        String   @unique
  username     String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  role         UserRole @default(CUSTOMER)
  managedAlleys BowlingAlley[] @relation("ManagerAlleys")
  reservations Reservation[]
}

model BowlingAlley {
  id         Int      @id @default(autoincrement())
  managerId  String
  manager    Account @relation(fields: [managerId], references: [id], name: "ManagerAlleys")
  timeSlots  TimeSlot[]
  reservations Reservation[]
}

model TimeSlot {
  id          Int         @id @default(autoincrement())
  startTime   String
  endTime     String
  date	      String
  status      TimeSlotStatus @default(AVAILABLE)
  alleyId     Int
  bowlingAlley BowlingAlley @relation(fields: [alleyId], references: [id])
  reservation Reservation?
}

model Reservation {
  id              Int       @id @default(autoincrement())
  accountId       String
  timeSlotId      Int       @unique
  playerCount     Int
  contactInfo     String
  alleyId	  Int
  reservationStatus ReservationStatus @default(PENDING)
  account         Account  @relation(fields: [accountId], references: [id])
  timeSlot        TimeSlot @relation(fields: [timeSlotId], references: [id])
  alley		  BowlingAlley @relation(fields: [alleyId], references: [id])
}
